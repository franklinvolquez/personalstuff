<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:renderers="fr.kapit.lab.demo.ui.renderers.*"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 width="100" height="100"
		 implements="fr.kapit.visualizer.renderers.IRenderer ,fr.kapit.visualizer.renderers.ISelectable,fr.kapit.visualizer.renderers.IMorphable">
	<fx:Script>
	<![CDATA[
		import fr.kapit.visualizer.base.IItem;
		import fr.kapit.visualizer.constants.ClippingShapeConstants;
		import mx.events.FlexEvent;
		
		[Bindable]
		private var _tagValue:String;

		private var _data:Object;

		public function get data():Object
		{
			return _data;
		}

		public function set data(value:Object):void
		{
			_data = value;
			_tagValue = _data.tag;
		}

		private var _isFixed:Boolean = false;

		public function get isFixed():Boolean
		{
			return _isFixed;
		}

		public function set isFixed(value:Boolean):void
		{
			_isFixed = value;
		}

		private var _item:IItem;

		public function get item():IItem
		{
			return _item;
		}

		public function set item(value:IItem):void
		{
			_item = value;
		}

		private var _isSelected:Boolean;

		[Bindable]
		public function get isSelected():Boolean
		{
			return _isSelected;
		}

		public function set isSelected(value:Boolean):void
		{
			_isSelected = value;
			filters = null;
		}

		private var _isHighlighted:Boolean;

		[Bindable]
		public function get isHighlighted():Boolean
		{
			return _isHighlighted;
		}

		public function set isHighlighted(value:Boolean):void
		{
			_isHighlighted = value;
		}
		protected var _clippingShape:String=ClippingShapeConstants.COMPACT_CIRCLE;
		public function get clippingShape():String
		{
			return _clippingShape;
		}
		
		public function set clippingShape(value:String):void
		{
			_clippingShape=value;
		}
		
		public function set isMorphDirty(value:Boolean):void
		{
			;
		}
		/* **************************
		* overriden methods
		****************************/
		protected override function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void{
			super.updateDisplayList(unscaledWidth,unscaledHeight);
		}
		
	]]>
	</fx:Script>

	<renderers:Tag left="-8" right="-8" top="-8" bottom="-8">
		<renderers:filters>
			<s:GlowFilter alpha="1" blurX="7" blurY="7" color="#00A2D2"/>
		</renderers:filters>
	</renderers:Tag>

    <s:HGroup width="100%" height="100%" gap="6" paddingTop="2"  
			  paddingLeft="10" paddingRight="10" verticalAlign="middle">
		<s:Label id="lbl" 
				 width="100%" verticalAlign="middle"
				 maxWidth="150" 
				 color="0x000000" fontFamily="lato*" fontSize="14" fontWeight="bold" lineBreak="toFit"
				 text="{_tagValue}" textAlign="center" maxDisplayedLines="1" showTruncationTip="true" 
				  />
	</s:HGroup>
</s:Group>
